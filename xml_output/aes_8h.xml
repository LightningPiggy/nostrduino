<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="aes_8h" kind="file" language="C++">
    <compoundname>aes.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includedby refid="aes_8cpp" local="yes">src/aes.cpp</includedby>
    <includedby refid="Nip04_8h" local="no">src/Nip04.h</includedby>
    <includedby refid="NostrEvent_8h" local="no">src/NostrEvent.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/aes.h</label>
        <link refid="aes_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>src/Nip47.h</label>
        <link refid="Nip47_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/aes.h</label>
        <link refid="aes_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/NostrEvent.h</label>
        <link refid="NostrEvent_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/aes.cpp</label>
        <link refid="aes_8cpp"/>
      </node>
      <node id="7">
        <label>src/services/NWC.cpp</label>
        <link refid="NWC_8cpp"/>
      </node>
      <node id="4">
        <label>src/Nip04.cpp</label>
        <link refid="Nip04_8cpp"/>
      </node>
      <node id="3">
        <label>src/Nip04.h</label>
        <link refid="Nip04_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/services/NWC.h</label>
        <link refid="NWC_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/NostrPool.h</label>
        <link refid="NostrPool_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/NostrEvent.cpp</label>
        <link refid="NostrEvent_8cpp"/>
      </node>
      <node id="12">
        <label>src/NostrPool.cpp</label>
        <link refid="NostrPool_8cpp"/>
      </node>
      <node id="6">
        <label>src/Nip47.cpp</label>
        <link refid="Nip47_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structAES__ctx" prot="public">AES_ctx</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="aes_8h_1a08835843c9d6a68371f350c015a83fd7" prot="public" static="no">
        <name>CBC</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/aes.h" line="15" column="11" bodyfile="src/aes.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="aes_8h_1ab80203aded373ef3e2695b0903b53471" prot="public" static="no">
        <name>ECB</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/aes.h" line="19" column="11" bodyfile="src/aes.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="aes_8h_1aa445a79fc0f7373036c72d198e51f19a" prot="public" static="no">
        <name>CTR</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/aes.h" line="23" column="11" bodyfile="src/aes.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="aes_8h_1a7d4e8231c47a6565bb42b006d0bf3b18" prot="public" static="no">
        <name>AES256</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/aes.h" line="29" column="9" bodyfile="src/aes.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="aes_8h_1ada62b7b09dab0d7ef92c04364b16b5b5" prot="public" static="no">
        <name>AES_BLOCKLEN</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/aes.h" line="31" column="9" bodyfile="src/aes.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="aes_8h_1af37c01fbc1515e7a416c14025c8bf843" prot="public" static="no">
        <name>AES_KEYLEN</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/aes.h" line="34" column="13" bodyfile="src/aes.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="aes_8h_1a9aaae67ad3ff3be7071bb6938c76fc1b" prot="public" static="no">
        <name>AES_keyExpSize</name>
        <initializer>240</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/aes.h" line="35" column="13" bodyfile="src/aes.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="aes_8h_1af6103754d8f46cb642b0041973e4102e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AES_init_ctx</definition>
        <argsstring>(struct AES_ctx *ctx, const uint8_t *key)</argsstring>
        <name>AES_init_ctx</name>
        <param>
          <type>struct <ref refid="structAES__ctx" kindref="compound">AES_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/aes.h" line="52" column="6" bodyfile="src/aes.cpp" bodystart="219" bodyend="222" declfile="src/aes.h" declline="52" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="aes_8h_1a99d17d22ed909bd155007cdece29263a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AES_init_ctx_iv</definition>
        <argsstring>(struct AES_ctx *ctx, const uint8_t *key, const uint8_t *iv)</argsstring>
        <name>AES_init_ctx_iv</name>
        <param>
          <type>struct <ref refid="structAES__ctx" kindref="compound">AES_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>iv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/aes.h" line="54" column="6" bodyfile="src/aes.cpp" bodystart="224" bodyend="228" declfile="src/aes.h" declline="54" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="aes_8h_1afbdec54757622549b63838ea2fbc3cf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AES_ctx_set_iv</definition>
        <argsstring>(struct AES_ctx *ctx, const uint8_t *iv)</argsstring>
        <name>AES_ctx_set_iv</name>
        <param>
          <type>struct <ref refid="structAES__ctx" kindref="compound">AES_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>iv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/aes.h" line="55" column="6" bodyfile="src/aes.cpp" bodystart="229" bodyend="232" declfile="src/aes.h" declline="55" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="aes_8h_1a233447aeecf56715c358c518acb908ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AES_ECB_encrypt</definition>
        <argsstring>(const struct AES_ctx *ctx, uint8_t *buf)</argsstring>
        <name>AES_ECB_encrypt</name>
        <param>
          <type>const struct <ref refid="structAES__ctx" kindref="compound">AES_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/aes.h" line="62" column="6" bodyfile="src/aes.cpp" bodystart="470" bodyend="474" declfile="src/aes.h" declline="62" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="aes_8h_1aa82deb7667cd7b19bbe783d2990642ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AES_ECB_decrypt</definition>
        <argsstring>(const struct AES_ctx *ctx, uint8_t *buf)</argsstring>
        <name>AES_ECB_decrypt</name>
        <param>
          <type>const struct <ref refid="structAES__ctx" kindref="compound">AES_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/aes.h" line="63" column="6" bodyfile="src/aes.cpp" bodystart="476" bodyend="480" declfile="src/aes.h" declline="63" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="aes_8h_1a296bd30323044b07d69e0e3b5f676281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AES_CBC_encrypt_buffer</definition>
        <argsstring>(struct AES_ctx *ctx, uint8_t *buf, size_t length)</argsstring>
        <name>AES_CBC_encrypt_buffer</name>
        <param>
          <type>struct <ref refid="structAES__ctx" kindref="compound">AES_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/aes.h" line="73" column="6" bodyfile="src/aes.cpp" bodystart="501" bodyend="514" declfile="src/aes.h" declline="73" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="aes_8h_1a0672c442747b26b691202c493a08a104" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AES_CBC_decrypt_buffer</definition>
        <argsstring>(struct AES_ctx *ctx, uint8_t *buf, size_t length)</argsstring>
        <name>AES_CBC_decrypt_buffer</name>
        <param>
          <type>struct <ref refid="structAES__ctx" kindref="compound">AES_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/aes.h" line="74" column="6" bodyfile="src/aes.cpp" bodystart="516" bodyend="529" declfile="src/aes.h" declline="74" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="aes_8h_1aa585f26e880ce9a112dc4d945721ff19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AES_CTR_xcrypt_buffer</definition>
        <argsstring>(struct AES_ctx *ctx, uint8_t *buf, size_t length)</argsstring>
        <name>AES_CTR_xcrypt_buffer</name>
        <param>
          <type>struct <ref refid="structAES__ctx" kindref="compound">AES_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/aes.h" line="86" column="6" bodyfile="src/aes.cpp" bodystart="538" bodyend="569" declfile="src/aes.h" declline="86" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_AES_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_AES_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>the<sp/>macros<sp/>below<sp/>to<sp/>1/0<sp/>to<sp/>enable/disable<sp/>the<sp/>mode<sp/>of<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CBC<sp/>enables<sp/>AES<sp/>encryption<sp/>in<sp/>CBC-mode<sp/>of<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CTR<sp/>enables<sp/>encryption<sp/>in<sp/>counter-mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ECB<sp/>enables<sp/>the<sp/>basic<sp/>ECB<sp/>16-byte<sp/>block<sp/>algorithm.<sp/>All<sp/>can<sp/>be<sp/>enabled<sp/>simultaneously.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>#ifndef-guard<sp/>allows<sp/>it<sp/>to<sp/>be<sp/>configured<sp/>before<sp/>#include&apos;ing<sp/>or<sp/>at<sp/>compile<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CBC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="aes_8h_1a08835843c9d6a68371f350c015a83fd7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CBC<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ECB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="aes_8h_1ab80203aded373ef3e2695b0903b53471" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>ECB<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CTR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="aes_8h_1aa445a79fc0f7373036c72d198e51f19a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CTR<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>AES128<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>AES192<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="aes_8h_1a7d4e8231c47a6565bb42b006d0bf3b18" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AES256<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="aes_8h_1ada62b7b09dab0d7ef92c04364b16b5b5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AES_BLOCKLEN<sp/>16<sp/></highlight><highlight class="comment">//<sp/>Block<sp/>length<sp/>in<sp/>bytes<sp/>-<sp/>AES<sp/>is<sp/>128b<sp/>block<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AES256)<sp/>&amp;&amp;<sp/>(AES256<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="aes_8h_1af37c01fbc1515e7a416c14025c8bf843" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>AES_KEYLEN<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="aes_8h_1a9aaae67ad3ff3be7071bb6938c76fc1b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>AES_keyExpSize<sp/>240</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(AES192)<sp/>&amp;&amp;<sp/>(AES192<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>AES_KEYLEN<sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>AES_keyExpSize<sp/>208</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>AES_KEYLEN<sp/>16<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Key<sp/>length<sp/>in<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>AES_keyExpSize<sp/>176</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structAES__ctx" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structAES__ctx" kindref="compound">AES_ctx</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46" refid="structAES__ctx_1aa475fe62fd5774891c7a42596f6d9c2e" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="structAES__ctx_1aa475fe62fd5774891c7a42596f6d9c2e" kindref="member">RoundKey</ref>[<ref refid="aes_8h_1a9aaae67ad3ff3be7071bb6938c76fc1b" kindref="member">AES_keyExpSize</ref>];</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(CBC)<sp/>&amp;&amp;<sp/>(CBC<sp/>==<sp/>1))<sp/>||<sp/>(defined(CTR)<sp/>&amp;&amp;<sp/>(CTR<sp/>==<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structAES__ctx_1a1fa4921f7eeaca82eb974899edcdef3a" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="structAES__ctx_1a1fa4921f7eeaca82eb974899edcdef3a" kindref="member">Iv</ref>[<ref refid="aes_8h_1ada62b7b09dab0d7ef92c04364b16b5b5" kindref="member">AES_BLOCKLEN</ref>];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="aes_8h_1af6103754d8f46cb642b0041973e4102e" kindref="member">AES_init_ctx</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structAES__ctx" kindref="compound">AES_ctx</ref>*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>key);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(CBC)<sp/>&amp;&amp;<sp/>(CBC<sp/>==<sp/>1))<sp/>||<sp/>(defined(CTR)<sp/>&amp;&amp;<sp/>(CTR<sp/>==<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="aes_8h_1a99d17d22ed909bd155007cdece29263a" kindref="member">AES_init_ctx_iv</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structAES__ctx" kindref="compound">AES_ctx</ref>*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>iv);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="aes_8h_1afbdec54757622549b63838ea2fbc3cf6" kindref="member">AES_ctx_set_iv</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structAES__ctx" kindref="compound">AES_ctx</ref>*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>iv);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ECB)<sp/>&amp;&amp;<sp/>(ECB<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>buffer<sp/>size<sp/>is<sp/>exactly<sp/>AES_BLOCKLEN<sp/>bytes;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>need<sp/>only<sp/>AES_init_ctx<sp/>as<sp/>IV<sp/>is<sp/>not<sp/>used<sp/>in<sp/>ECB<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NB:<sp/>ECB<sp/>is<sp/>considered<sp/>insecure<sp/>for<sp/>most<sp/>uses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="aes_8h_1a233447aeecf56715c358c518acb908ed" kindref="member">AES_ECB_encrypt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structAES__ctx" kindref="compound">AES_ctx</ref>*<sp/>ctx,<sp/>uint8_t*<sp/>buf);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="aes_8h_1aa82deb7667cd7b19bbe783d2990642ad" kindref="member">AES_ECB_decrypt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structAES__ctx" kindref="compound">AES_ctx</ref>*<sp/>ctx,<sp/>uint8_t*<sp/>buf);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(ECB)<sp/>&amp;&amp;<sp/>(ECB<sp/>==<sp/>!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CBC)<sp/>&amp;&amp;<sp/>(CBC<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>buffer<sp/>size<sp/>MUST<sp/>be<sp/>mutile<sp/>of<sp/>AES_BLOCKLEN;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Suggest<sp/>https://en.wikipedia.org/wiki/Padding_(cryptography)#PKCS7<sp/>for<sp/>padding<sp/>scheme</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTES:<sp/>you<sp/>need<sp/>to<sp/>set<sp/>IV<sp/>in<sp/>ctx<sp/>via<sp/>AES_init_ctx_iv()<sp/>or<sp/>AES_ctx_set_iv()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no<sp/>IV<sp/>should<sp/>ever<sp/>be<sp/>reused<sp/>with<sp/>the<sp/>same<sp/>key<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="aes_8h_1a296bd30323044b07d69e0e3b5f676281" kindref="member">AES_CBC_encrypt_buffer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structAES__ctx" kindref="compound">AES_ctx</ref>*<sp/>ctx,<sp/>uint8_t*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="aes_8h_1a0672c442747b26b691202c493a08a104" kindref="member">AES_CBC_decrypt_buffer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structAES__ctx" kindref="compound">AES_ctx</ref>*<sp/>ctx,<sp/>uint8_t*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CBC)<sp/>&amp;&amp;<sp/>(CBC<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CTR)<sp/>&amp;&amp;<sp/>(CTR<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Same<sp/>function<sp/>for<sp/>encrypting<sp/>as<sp/>for<sp/>decrypting.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IV<sp/>is<sp/>incremented<sp/>for<sp/>every<sp/>block,<sp/>and<sp/>used<sp/>after<sp/>encryption<sp/>as<sp/>XOR-compliment<sp/>for<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Suggesting<sp/>https://en.wikipedia.org/wiki/Padding_(cryptography)#PKCS7<sp/>for<sp/>padding<sp/>scheme</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTES:<sp/>you<sp/>need<sp/>to<sp/>set<sp/>IV<sp/>in<sp/>ctx<sp/>with<sp/>AES_init_ctx_iv()<sp/>or<sp/>AES_ctx_set_iv()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no<sp/>IV<sp/>should<sp/>ever<sp/>be<sp/>reused<sp/>with<sp/>the<sp/>same<sp/>key<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="aes_8h_1aa585f26e880ce9a112dc4d945721ff19" kindref="member">AES_CTR_xcrypt_buffer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structAES__ctx" kindref="compound">AES_ctx</ref>*<sp/>ctx,<sp/>uint8_t*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CTR)<sp/>&amp;&amp;<sp/>(CTR<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>_AES_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/aes.h"/>
  </compounddef>
</doxygen>
