<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacenostr_1_1esp32_1_1ESP32Platform" kind="namespace" language="C++">
    <compoundname>nostr::esp32::ESP32Platform</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacenostr_1_1esp32_1_1ESP32Platform_1a5faabbc42497acaa66f7b10f2a9d9a4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long nostr::esp32::ESP32Platform::getUnixTimestamp</definition>
        <argsstring>()</argsstring>
        <name>getUnixTimestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Platform.h" line="13" column="34" bodyfile="src/esp32/ESP32Platform.h" bodystart="13" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="namespacenostr_1_1esp32_1_1ESP32Platform_1ae8019dd5e74873268e638516fa73b50e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long int</type>
        <definition>long int nostr::esp32::ESP32Platform::getRealRandom</definition>
        <argsstring>(long int min, long int max)</argsstring>
        <name>getRealRandom</name>
        <param>
          <type>long int</type>
          <declname>min</declname>
        </param>
        <param>
          <type>long int</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Platform.h" line="23" column="30" bodyfile="src/esp32/ESP32Platform.h" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="namespacenostr_1_1esp32_1_1ESP32Platform_1abdc5644c7c3ca147eb184fc1f7b0cb49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nostr::esp32::ESP32Platform::serialLogger</definition>
        <argsstring>(const NostrString &amp;str)</argsstring>
        <name>serialLogger</name>
        <param>
          <type>const <ref refid="NostrString_8h_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Platform.h" line="27" column="25" bodyfile="src/esp32/ESP32Platform.h" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacenostr_1_1esp32_1_1ESP32Platform_1aef2b4ec9b016229f24baa98be113baaa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nostr::esp32::ESP32Platform::initWifi</definition>
        <argsstring>(NostrString ssid, NostrString passphrase, int channel=6)</argsstring>
        <name>initWifi</name>
        <param>
          <type><ref refid="NostrString_8h_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref></type>
          <declname>ssid</declname>
        </param>
        <param>
          <type><ref refid="NostrString_8h_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref></type>
          <declname>passphrase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
          <defval>6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the WiFi connection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Platform.h" line="34" column="25" bodyfile="src/esp32/ESP32Platform.h" bodystart="34" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="namespacenostr_1_1esp32_1_1ESP32Platform_1add8d06cbe3a3b96d7d3c8edd90d99d3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nostr::esp32::ESP32Platform::initTime</definition>
        <argsstring>(const char *ntpServer, long gmtOffset_sec=0, int daylightOffset_sec=3600)</argsstring>
        <name>initTime</name>
        <param>
          <type>const char *</type>
          <declname>ntpServer</declname>
        </param>
        <param>
          <type>long</type>
          <declname>gmtOffset_sec</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>daylightOffset_sec</declname>
          <defval>3600</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the time service </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Platform.h" line="51" column="25" bodyfile="src/esp32/ESP32Platform.h" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespacenostr_1_1esp32_1_1ESP32Platform_1af10d1ee01a3830f608b316b4770072fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nostr::esp32::ESP32Platform::initNostr</definition>
        <argsstring>(bool withLogger)</argsstring>
        <name>initNostr</name>
        <param>
          <type>bool</type>
          <declname>withLogger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize platform specific code for the nostr library </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Platform.h" line="59" column="25" bodyfile="src/esp32/ESP32Platform.h" bodystart="59" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="namespacenostr_1_1esp32_1_1ESP32Platform_1abe46d31af712a8dc70582da944ce1229" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnostr_1_1esp32_1_1ESP32Transport" kindref="compound">ESP32Transport</ref> *</type>
        <definition>ESP32Transport* nostr::esp32::ESP32Platform::getTransport</definition>
        <argsstring>()</argsstring>
        <name>getTransport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a platform specific transport </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Platform.h" line="69" column="35" bodyfile="src/esp32/ESP32Platform.h" bodystart="69" bodyend="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/esp32/ESP32Platform.h" line="12" column="9"/>
  </compounddef>
</doxygen>
