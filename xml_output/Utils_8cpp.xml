<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="Utils_8cpp" kind="file" language="C++">
    <compoundname>Utils.cpp</compoundname>
    <includes refid="Utils_8h" local="yes">Utils.h</includes>
    <incdepgraph>
      <node id="4">
        <label>functional</label>
      </node>
      <node id="7">
        <label>NostrString.h</label>
        <link refid="NostrString_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="1">
        <label>src/Utils.cpp</label>
        <link refid="Utils_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="2">
        <label>Utils.h</label>
        <link refid="Utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Bitcoin.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Utils_8h" kindref="compound">Utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenostr" kindref="compound">nostr</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">std::function&lt;void(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="NostrString_8cpp_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref><sp/>&amp;)&gt;<sp/><ref refid="classnostr_1_1Utils_1a30f95a2c1e6b196a7ed1207fa81f424b" kindref="member">Utils::logger</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classnostr_1_1Utils_1a4610656b971adee6ea94d0afe7558943" kindref="member">Utils::subs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7"><highlight class="normal">std::function&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>int(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max)&gt;<sp/><ref refid="classnostr_1_1Utils_1a3004dbbf82b7ed9ff76431b8b9e1a9c8" kindref="member">Utils::realRandom</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8"><highlight class="normal">std::function&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>long()&gt;<sp/><ref refid="classnostr_1_1Utils_1a2b6c177c1e6138d0fbce8cf1f9db828a" kindref="member">Utils::timeSecondsProvider</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnostr_1_1Utils_1a83f238553d8ec7b06e3c9699db0d0dff" kindref="member">Utils::setUnixTimeSecondsProvider</ref>(std::function&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">()&gt;<sp/>timeSecondsProvider)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnostr_1_1Utils_1a2b6c177c1e6138d0fbce8cf1f9db828a" kindref="member">Utils::timeSecondsProvider</ref><sp/>=<sp/><ref refid="classnostr_1_1Utils_1a2b6c177c1e6138d0fbce8cf1f9db828a" kindref="member">timeSecondsProvider</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnostr_1_1Utils_1ad972d6caab44538894e0151c9ce792d4" kindref="member">Utils::setRealRandom</ref>(std::function&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max)&gt;<sp/>realRandom)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnostr_1_1Utils_1a3004dbbf82b7ed9ff76431b8b9e1a9c8" kindref="member">Utils::realRandom</ref><sp/>=<sp/><ref refid="classnostr_1_1Utils_1a3004dbbf82b7ed9ff76431b8b9e1a9c8" kindref="member">realRandom</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnostr_1_1Utils_1af139d4e4f8e5e356215b4e99c838a9cf" kindref="member">Utils::setLogger</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="NostrString_8cpp_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref><sp/>&amp;)&gt;<sp/>logger)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnostr_1_1Utils_1a30f95a2c1e6b196a7ed1207fa81f424b" kindref="member">Utils::logger</ref><sp/>=<sp/><ref refid="classnostr_1_1Utils_1a30f95a2c1e6b196a7ed1207fa81f424b" kindref="member">logger</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnostr_1_1Utils_1a8d9559590001eff8072c190915a53771" kindref="member">Utils::log</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="NostrString_8cpp_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref><sp/>&amp;message)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classnostr_1_1Utils_1a30f95a2c1e6b196a7ed1207fa81f424b" kindref="member">Utils::logger</ref>)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnostr_1_1Utils_1a30f95a2c1e6b196a7ed1207fa81f424b" kindref="member">Utils::logger</ref>(message);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classnostr_1_1Utils_1ac3406b5afa052bec36e3fed2d95e33f8" kindref="member">Utils::unixTimeSeconds</ref>()<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classnostr_1_1Utils_1a2b6c177c1e6138d0fbce8cf1f9db828a" kindref="member">timeSecondsProvider</ref>)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnostr_1_1Utils_1a8d9559590001eff8072c190915a53771" kindref="member">Utils::log</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>unix<sp/>time<sp/>provider<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnostr_1_1Utils_1a2b6c177c1e6138d0fbce8cf1f9db828a" kindref="member">timeSecondsProvider</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="NostrString_8cpp_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref><sp/><ref refid="classnostr_1_1Utils_1ac357e509edfd7eb730bacc55f003aa65" kindref="member">Utils::getNewSubscriptionId</ref>()<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NostrString_8cpp_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref><sp/>chars<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ012345&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;6789&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NostrString_8cpp_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="NostrString_8cpp_1a6d17546b312f1d7b2488ad6c81f63e6e" kindref="member">NostrString_intToString</ref>(<ref refid="classnostr_1_1Utils_1a4610656b971adee6ea94d0afe7558943" kindref="member">subs</ref>++);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxLength<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="NostrString_8cpp_1a28295d150d85f3d9c4392381331d4870" kindref="member">NostrString_length</ref>(result);<sp/>i<sp/>&lt;<sp/>maxLength;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>randomIndex<sp/>=<sp/><ref refid="classnostr_1_1Utils_1a83898b2e9aa65a0cf05813f327d55f45" kindref="member">Utils::randomInt</ref>(0,<sp/><ref refid="NostrString_8cpp_1a28295d150d85f3d9c4392381331d4870" kindref="member">NostrString_length</ref>(chars)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>chars[randomIndex];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classnostr_1_1Utils_1a83898b2e9aa65a0cf05813f327d55f45" kindref="member">Utils::randomInt</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classnostr_1_1Utils_1a3004dbbf82b7ed9ff76431b8b9e1a9c8" kindref="member">realRandom</ref>)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnostr_1_1Utils_1a8d9559590001eff8072c190915a53771" kindref="member">Utils::log</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>random<sp/>function<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnostr_1_1Utils_1a3004dbbf82b7ed9ff76431b8b9e1a9c8" kindref="member">realRandom</ref>(min,<sp/>max);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="NostrString_8cpp_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref><sp/><ref refid="classnostr_1_1Utils_1a4dc29d30dfbdb8d035310cad80f42605" kindref="member">Utils::getPublicKey</ref>(<ref refid="NostrString_8cpp_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref><sp/>privKeyHex)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>privateKeyBytes[<ref refid="Utils_8h_1a3f16b02f27bee5698c1e6ad357486214" kindref="member">NOSTR_DIGEST_SIZE</ref>];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NostrString_8cpp_1a528c8b1a69be70e58f1aa9288f79ff45" kindref="member">NostrString_hexToBytes</ref>(privKeyHex,<sp/>privateKeyBytes,<sp/><ref refid="Utils_8h_1a3f16b02f27bee5698c1e6ad357486214" kindref="member">NOSTR_DIGEST_SIZE</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>PrivateKey<sp/>privateKey(privateKeyBytes);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>pubKeyBytes[<ref refid="Utils_8h_1a3f16b02f27bee5698c1e6ad357486214" kindref="member">NOSTR_DIGEST_SIZE</ref>];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>PublicKey<sp/>pubKey<sp/>=<sp/>privateKey.publicKey();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NostrString_8cpp_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref><sp/>pubKeyHex<sp/>=<sp/>pubKey.toString();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>pubKeyHex<sp/>=<sp/><ref refid="NostrString_8cpp_1a81ec406c3051526110d2ebc3b158a15e" kindref="member">NostrString_substring</ref>(pubKeyHex,<sp/>2);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pubKeyHex;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/Utils.cpp"/>
  </compounddef>
</doxygen>
