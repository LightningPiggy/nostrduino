<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnostr_1_1esp32_1_1ESP32Connection" kind="class" language="C++" prot="public">
    <compoundname>nostr::esp32::ESP32Connection</compoundname>
    <basecompoundref refid="classnostr_1_1Connection" prot="public" virt="non-virtual">nostr::Connection</basecompoundref>
    <includes refid="ESP32Transport_8h" local="no">ESP32Transport.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classnostr_1_1esp32_1_1ESP32Connection_1abcef5e3285a164162a943f14b97d7aea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class ESP32Transport</definition>
        <argsstring></argsstring>
        <name>ESP32Transport</name>
        <param>
          <type><ref refid="classnostr_1_1esp32_1_1ESP32Transport" kindref="compound">ESP32Transport</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Transport.h" line="15" column="5" bodyfile="src/esp32/ESP32Transport.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnostr_1_1esp32_1_1ESP32Connection_1a37e5b2c4aae5cd7d9929f873e689a021" prot="private" static="no" mutable="no">
        <type><ref refid="classnostr_1_1esp32_1_1ESP32Transport" kindref="compound">ESP32Transport</ref> *</type>
        <definition>ESP32Transport* nostr::esp32::ESP32Connection::transport</definition>
        <argsstring></argsstring>
        <name>transport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Transport.h" line="29" column="20" bodyfile="src/esp32/ESP32Transport.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnostr_1_1esp32_1_1ESP32Connection_1a73d9f0c191c0f46d6f78b7c3d98f5ab4" prot="private" static="no" mutable="no">
        <type>WebSocketsClient</type>
        <definition>WebSocketsClient nostr::esp32::ESP32Connection::ws</definition>
        <argsstring></argsstring>
        <name>ws</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Transport.h" line="30" column="22" bodyfile="src/esp32/ESP32Transport.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnostr_1_1esp32_1_1ESP32Connection_1a834199d711edfd8ae63a4bb4d8470c59" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::function&lt; void(<ref refid="NostrString_8h_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref>)&gt; &gt;</type>
        <definition>std::vector&lt;std::function&lt;void(NostrString)&gt; &gt; nostr::esp32::ESP32Connection::messageListeners</definition>
        <argsstring></argsstring>
        <name>messageListeners</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Transport.h" line="31" column="17" bodyfile="src/esp32/ESP32Transport.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnostr_1_1esp32_1_1ESP32Connection_1a57eb5e58ef7218c13b79f08b6bb87a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void esp32::ESP32Connection::send</definition>
        <argsstring>(NostrString message) override</argsstring>
        <name>send</name>
        <reimplements refid="classnostr_1_1Connection_1ac5de060192a611ec634b1123c6ce7787">send</reimplements>
        <param>
          <type><ref refid="NostrString_8h_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Transport.h" line="18" column="10" bodyfile="src/esp32/ESP32Transport.cpp" bodystart="146" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classnostr_1_1esp32_1_1ESP32Connection_1a8a21ab9c9baabe361305c97f5d7b7253" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void esp32::ESP32Connection::disconnect</definition>
        <argsstring>() override</argsstring>
        <name>disconnect</name>
        <reimplements refid="classnostr_1_1Connection_1a0de18a7197c81db8ac43036f6dcfc4ff">disconnect</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Transport.h" line="19" column="10" bodyfile="src/esp32/ESP32Transport.cpp" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classnostr_1_1esp32_1_1ESP32Connection_1ac0bcd94ae63bdb92da45f8fee3b55ac2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void esp32::ESP32Connection::loop</definition>
        <argsstring>() override</argsstring>
        <name>loop</name>
        <reimplements refid="classnostr_1_1Connection_1aee2be02ce75a3bb2a15306212e77b382">loop</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Transport.h" line="20" column="10" bodyfile="src/esp32/ESP32Transport.cpp" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classnostr_1_1esp32_1_1ESP32Connection_1a69db2e6817533bffc6879915b6d8c87e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool esp32::ESP32Connection::isReady</definition>
        <argsstring>() override</argsstring>
        <name>isReady</name>
        <reimplements refid="classnostr_1_1Connection_1af780de347728124fc0664614f100c604">isReady</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Transport.h" line="21" column="10" bodyfile="src/esp32/ESP32Transport.cpp" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classnostr_1_1esp32_1_1ESP32Connection_1a70bfc236b0189524d7d5965cba18cfc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void esp32::ESP32Connection::addMessageListener</definition>
        <argsstring>(std::function&lt; void(NostrString)&gt; listener) override</argsstring>
        <name>addMessageListener</name>
        <reimplements refid="classnostr_1_1Connection_1a09f2f3d42f8b4143dc616207afa7cab3">addMessageListener</reimplements>
        <param>
          <type>std::function&lt; void(<ref refid="NostrString_8h_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref>)&gt;</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Transport.h" line="22" column="10" bodyfile="src/esp32/ESP32Transport.cpp" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classnostr_1_1esp32_1_1ESP32Connection_1a5bcfe4c8e2b1fe994f89cd8290c53dab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>esp32::ESP32Connection::~ESP32Connection</definition>
        <argsstring>() override</argsstring>
        <name>~ESP32Connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Transport.h" line="23" column="5" bodyfile="src/esp32/ESP32Transport.cpp" bodystart="175" bodyend="177"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classnostr_1_1esp32_1_1ESP32Connection_1ac99b6416b029fd2d3f86b21423c15b64" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>esp32::ESP32Connection::ESP32Connection</definition>
        <argsstring>(ESP32Transport *transport, NostrString url)</argsstring>
        <name>ESP32Connection</name>
        <param>
          <type><ref refid="classnostr_1_1esp32_1_1ESP32Transport" kindref="compound">ESP32Transport</ref> *</type>
          <declname>transport</declname>
        </param>
        <param>
          <type><ref refid="NostrString_8h_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref></type>
          <declname>url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/esp32/ESP32Transport.h" line="26" column="5" bodyfile="src/esp32/ESP32Transport.cpp" bodystart="99" bodyend="144"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nostr::Connection</label>
        <link refid="classnostr_1_1Connection"/>
      </node>
      <node id="1">
        <label>nostr::esp32::ESP32Connection</label>
        <link refid="classnostr_1_1esp32_1_1ESP32Connection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nostr::Connection</label>
        <link refid="classnostr_1_1Connection"/>
      </node>
      <node id="1">
        <label>nostr::esp32::ESP32Connection</label>
        <link refid="classnostr_1_1esp32_1_1ESP32Connection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/esp32/ESP32Transport.h" line="14" column="1" bodyfile="src/esp32/ESP32Transport.h" bodystart="14" bodyend="32"/>
    <listofallmembers>
      <member refid="classnostr_1_1esp32_1_1ESP32Connection_1a70bfc236b0189524d7d5965cba18cfc1" prot="public" virt="virtual"><scope>nostr::esp32::ESP32Connection</scope><name>addMessageListener</name></member>
      <member refid="classnostr_1_1esp32_1_1ESP32Connection_1a8a21ab9c9baabe361305c97f5d7b7253" prot="public" virt="virtual"><scope>nostr::esp32::ESP32Connection</scope><name>disconnect</name></member>
      <member refid="classnostr_1_1esp32_1_1ESP32Connection_1ac99b6416b029fd2d3f86b21423c15b64" prot="protected" virt="non-virtual"><scope>nostr::esp32::ESP32Connection</scope><name>ESP32Connection</name></member>
      <member refid="classnostr_1_1esp32_1_1ESP32Connection_1abcef5e3285a164162a943f14b97d7aea" prot="private" virt="non-virtual"><scope>nostr::esp32::ESP32Connection</scope><name>ESP32Transport</name></member>
      <member refid="classnostr_1_1esp32_1_1ESP32Connection_1a69db2e6817533bffc6879915b6d8c87e" prot="public" virt="virtual"><scope>nostr::esp32::ESP32Connection</scope><name>isReady</name></member>
      <member refid="classnostr_1_1esp32_1_1ESP32Connection_1ac0bcd94ae63bdb92da45f8fee3b55ac2" prot="public" virt="virtual"><scope>nostr::esp32::ESP32Connection</scope><name>loop</name></member>
      <member refid="classnostr_1_1esp32_1_1ESP32Connection_1a834199d711edfd8ae63a4bb4d8470c59" prot="private" virt="non-virtual"><scope>nostr::esp32::ESP32Connection</scope><name>messageListeners</name></member>
      <member refid="classnostr_1_1esp32_1_1ESP32Connection_1a57eb5e58ef7218c13b79f08b6bb87a86" prot="public" virt="virtual"><scope>nostr::esp32::ESP32Connection</scope><name>send</name></member>
      <member refid="classnostr_1_1esp32_1_1ESP32Connection_1a37e5b2c4aae5cd7d9929f873e689a021" prot="private" virt="non-virtual"><scope>nostr::esp32::ESP32Connection</scope><name>transport</name></member>
      <member refid="classnostr_1_1esp32_1_1ESP32Connection_1a73d9f0c191c0f46d6f78b7c3d98f5ab4" prot="private" virt="non-virtual"><scope>nostr::esp32::ESP32Connection</scope><name>ws</name></member>
      <member refid="classnostr_1_1Connection_1a8b3ae539c84b9de24c5db2071885b2c9" prot="public" virt="virtual"><scope>nostr::esp32::ESP32Connection</scope><name>~Connection</name></member>
      <member refid="classnostr_1_1esp32_1_1ESP32Connection_1a5bcfe4c8e2b1fe994f89cd8290c53dab" prot="public" virt="non-virtual"><scope>nostr::esp32::ESP32Connection</scope><name>~ESP32Connection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
