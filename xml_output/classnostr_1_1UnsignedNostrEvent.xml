<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnostr_1_1UnsignedNostrEvent" kind="class" language="C++" prot="public">
    <compoundname>nostr::UnsignedNostrEvent</compoundname>
    <basecompoundref refid="classnostr_1_1NostrEvent" prot="public" virt="non-virtual">nostr::NostrEvent</basecompoundref>
    <includes refid="NostrEvent_8h" local="no">NostrEvent.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnostr_1_1UnsignedNostrEvent_1afddaa21707d84bf6b1a9e34576f5e7c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nostr::UnsignedNostrEvent::UnsignedNostrEvent</definition>
        <argsstring>()</argsstring>
        <name>UnsignedNostrEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/NostrEvent.h" line="117" column="5" bodyfile="src/NostrEvent.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classnostr_1_1UnsignedNostrEvent_1ace30203c0db0e13db4f949a6bf86ec97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nostr::UnsignedNostrEvent::UnsignedNostrEvent</definition>
        <argsstring>(unsigned int kind, NostrString content, unsigned long int created_at)</argsstring>
        <name>UnsignedNostrEvent</name>
        <param>
          <type>unsigned int</type>
          <declname>kind</declname>
        </param>
        <param>
          <type><ref refid="NostrString_8h_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref></type>
          <declname>content</declname>
        </param>
        <param>
          <type>unsigned long int</type>
          <declname>created_at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/NostrEvent.h" line="118" column="5" bodyfile="src/NostrEvent.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classnostr_1_1UnsignedNostrEvent_1a0bcc2093ad6597c1910d09e1c7f9ed4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnostr_1_1SignedNostrEvent" kindref="compound">SignedNostrEvent</ref></type>
        <definition>SignedNostrEvent UnsignedNostrEvent::sign</definition>
        <argsstring>(NostrString privateKeyHex)</argsstring>
        <name>sign</name>
        <param>
          <type><ref refid="NostrString_8h_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref></type>
          <declname>privateKeyHex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sign the event with a private key </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/NostrEvent.h" line="123" column="22" bodyfile="src/NostrEvent.cpp" bodystart="67" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classnostr_1_1UnsignedNostrEvent_1a7cc23ff66159de87a2407f89052b148a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nostr::UnsignedNostrEvent::setCreatedAt</definition>
        <argsstring>(unsigned long int created_at)</argsstring>
        <name>setCreatedAt</name>
        <param>
          <type>unsigned long int</type>
          <declname>created_at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/NostrEvent.h" line="125" column="10" bodyfile="src/NostrEvent.h" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classnostr_1_1UnsignedNostrEvent_1ab590c72570494a81b1c97f34b0f9bcd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nostr::UnsignedNostrEvent::setKind</definition>
        <argsstring>(unsigned int kind)</argsstring>
        <name>setKind</name>
        <param>
          <type>unsigned int</type>
          <declname>kind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/NostrEvent.h" line="126" column="10" bodyfile="src/NostrEvent.h" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classnostr_1_1UnsignedNostrEvent_1a297f28145b27958863a5f15e27d1f64c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nostr::UnsignedNostrEvent::setContent</definition>
        <argsstring>(NostrString content)</argsstring>
        <name>setContent</name>
        <param>
          <type><ref refid="NostrString_8h_1a51a5cc014ebe5eb0fda73fcf0e09b626" kindref="member">NostrString</ref></type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/NostrEvent.h" line="128" column="10" bodyfile="src/NostrEvent.h" bodystart="128" bodyend="128"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An unsigned <ref refid="classnostr_1_1NostrEvent" kindref="compound">NostrEvent</ref>. This is a support class used to create a new nostr event. When the event is ready to be sent, it should be signed with the sign method, the result is a <ref refid="classnostr_1_1SignedNostrEvent" kindref="compound">SignedNostrEvent</ref> that can be sent to the relay. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nostr::UnsignedNostrEvent</label>
        <link refid="classnostr_1_1UnsignedNostrEvent"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nostr::NostrEvent</label>
        <link refid="classnostr_1_1NostrEvent"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nostr::UnsignedNostrEvent</label>
        <link refid="classnostr_1_1UnsignedNostrEvent"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>nostr::NostrEventTags</label>
        <link refid="classnostr_1_1NostrEventTags"/>
      </node>
      <node id="2">
        <label>nostr::NostrEvent</label>
        <link refid="classnostr_1_1NostrEvent"/>
        <childnode refid="3" relation="usage">
          <edgelabel>tags</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/NostrEvent.h" line="115" column="1" bodyfile="src/NostrEvent.h" bodystart="115" bodyend="129"/>
    <listofallmembers>
      <member refid="classnostr_1_1NostrEvent_1ad625c784ea6908e9f5f1d251718a2d08" prot="protected" virt="non-virtual"><scope>nostr::UnsignedNostrEvent</scope><name>content</name></member>
      <member refid="classnostr_1_1NostrEvent_1a1f0316b807c981423321b1ce288c8baf" prot="protected" virt="non-virtual"><scope>nostr::UnsignedNostrEvent</scope><name>created_at</name></member>
      <member refid="classnostr_1_1NostrEvent_1aebb7ff8a3985bdcf93548cd0520c5593" prot="public" virt="non-virtual"><scope>nostr::UnsignedNostrEvent</scope><name>getContent</name></member>
      <member refid="classnostr_1_1NostrEvent_1ae4371b0dadcb8fe08e8504a1437ff6b4" prot="public" virt="non-virtual"><scope>nostr::UnsignedNostrEvent</scope><name>getCreatedAt</name></member>
      <member refid="classnostr_1_1NostrEvent_1a7d66bdcdaad510b5c79d045b040ef99e" prot="public" virt="non-virtual"><scope>nostr::UnsignedNostrEvent</scope><name>getKind</name></member>
      <member refid="classnostr_1_1NostrEvent_1a752465b8cdfb66f6b730250af1a40fa5" prot="public" virt="non-virtual"><scope>nostr::UnsignedNostrEvent</scope><name>getTags</name></member>
      <member refid="classnostr_1_1NostrEvent_1a669166a35df88ee656e39d5360414691" prot="protected" virt="non-virtual"><scope>nostr::UnsignedNostrEvent</scope><name>kind</name></member>
      <member refid="classnostr_1_1NostrEvent_1a4e0bb2a7e46e020b7da7dfcaca737719" prot="public" virt="non-virtual"><scope>nostr::UnsignedNostrEvent</scope><name>NostrEvent</name></member>
      <member refid="classnostr_1_1NostrEvent_1a5f917b73c6b8a19fe006aa906c25e50b" prot="protected" virt="non-virtual"><scope>nostr::UnsignedNostrEvent</scope><name>NostrEvent</name></member>
      <member refid="classnostr_1_1UnsignedNostrEvent_1a297f28145b27958863a5f15e27d1f64c" prot="public" virt="non-virtual"><scope>nostr::UnsignedNostrEvent</scope><name>setContent</name></member>
      <member refid="classnostr_1_1UnsignedNostrEvent_1a7cc23ff66159de87a2407f89052b148a" prot="public" virt="non-virtual"><scope>nostr::UnsignedNostrEvent</scope><name>setCreatedAt</name></member>
      <member refid="classnostr_1_1UnsignedNostrEvent_1ab590c72570494a81b1c97f34b0f9bcd7" prot="public" virt="non-virtual"><scope>nostr::UnsignedNostrEvent</scope><name>setKind</name></member>
      <member refid="classnostr_1_1UnsignedNostrEvent_1a0bcc2093ad6597c1910d09e1c7f9ed4c" prot="public" virt="non-virtual"><scope>nostr::UnsignedNostrEvent</scope><name>sign</name></member>
      <member refid="classnostr_1_1NostrEvent_1af3336c27b5d4158c9f20f42de5606bd5" prot="protected" virt="non-virtual"><scope>nostr::UnsignedNostrEvent</scope><name>tags</name></member>
      <member refid="classnostr_1_1UnsignedNostrEvent_1afddaa21707d84bf6b1a9e34576f5e7c9" prot="public" virt="non-virtual"><scope>nostr::UnsignedNostrEvent</scope><name>UnsignedNostrEvent</name></member>
      <member refid="classnostr_1_1UnsignedNostrEvent_1ace30203c0db0e13db4f949a6bf86ec97" prot="public" virt="non-virtual"><scope>nostr::UnsignedNostrEvent</scope><name>UnsignedNostrEvent</name></member>
      <member refid="classnostr_1_1NostrEvent_1a0e5d5662e539f439e9071459a4d9dad5" prot="public" virt="virtual"><scope>nostr::UnsignedNostrEvent</scope><name>~NostrEvent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
